<?php

namespace App\Http\Livewire\Facturas;

use App\Http\Livewire\Layouts\Modal;
use App\Models\MotivoCancelacionFactura;
use App\Models\Facturador;
use App\Models\Factura;

class Cancel extends Modal
{
    public $scope;
    public Factura $factura;
    public string $type;
    public $motivo = null;
    public $factura_sustituta = null;
    public $motivos = [];
    public $facturas = [];

    protected $listeners = ['$refresh'];

    public function mount(Factura $factura, string $scope)
    {
        $this->factura = $factura;
        $this->scope = $scope;

        $this->type = 'Factura';
        $this->motivos = MotivoCancelacionFactura::all()->map->only(['label', 'value'])->toArray();
        $this->facturas = Factura::where('estado', 'TIMBRADA')->get();
    }

    public static function modalMaxWidthClass(): string
    {
        return 'modal-lg'; // TODO: Change the autogenerated stub
    }

    public function updatedMotivo($value)
    {
        $this->factura_sustituta = null;
    }

    public function getMostrarSustitutosProperty()
    {
        return $this->motivo == 1;
    }

    public function getModoProperty()
    {
        return $this->factura->modo_prueba_cfdi ? 'PRUEBA' : 'PRODUCCION';
    }

    public function getTextAlertProperty()
    {
        return 'La Factura serÃ¡ cancelada';
    }

    public function render()
    {
        return view('livewire.facturas.cancel');
    }

    public function cancel()
    {
        $data = $this->validate([
            'motivo' => ['required', 'exists:tb_motivos_cancelacion_factura,id'],
            'factura_sustituta' => ['required_if:motivo,1'],
        ], [
            'motivo.required' => 'Campo requerido!',
            'motivo.exists' => 'Motivo no encontrado!',
            'factura_sustituta.exists' => 'Factura no encontrada!',
            'factura_sustituta.required_if' => 'Campo requerido!'
        ]);

        $facturador = new Facturador($this->factura->propietario);
        $res = $facturador->cancelar($this->factura->id, $data['motivo'], $data['factura_sustituta']);

        $this->emit('show-toast', $res['message'], $res['success'] ? 'success' : 'danger');
        $this->emit('$refresh');
        $this->emit('closeModal');
    }
}
