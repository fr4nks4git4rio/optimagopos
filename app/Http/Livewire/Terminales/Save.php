<?php

namespace App\Http\Livewire\Terminales;

use App\Http\Livewire\Layouts\Modal;
use App\Models\Terminal;
use Illuminate\Support\Arr;
use Illuminate\Support\Facades\Crypt;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class Save extends Modal
{
    public $scope = null;

    public Terminal $terminal;
    public $identificador;
    public $comentarios;
    public $sucursal_id;

    public $sucursales = [];
    protected $listeners = ['$refresh'];

    public function mount()
    {
        $this->identificador = isset($this->terminal) ? $this->terminal->identificador : str_shuffle(uniqid());
        $this->comentarios = isset($this->terminal) ? $this->terminal->comentarios : '';
        $this->sucursal_id = isset($this->terminal) ? $this->terminal->sucursal_id : '';
        if (!isset($this->terminal)) {
            $this->terminal = new Terminal();
        }

        $this->sucursales = DB::table('tb_sucursales')
            ->select('id as value', 'nombre_comercial as label')
            ->where('deleted_at', null)
            ->get()->map(function ($element) {
                $element->label = Crypt::decrypt($element->label);
                return (array) $element;
            })->toArray();
    }

    public static function modalMaxWidthClass(): string
    {
        return 'modal-md'; // TODO: Change the autogenerated stub
    }

    public function render()
    {
        return view('livewire.terminales.save');
    }

    public function getWithScopeProperty()
    {
        return $this->scope != null;
    }

    public function save()
    {
        $rules = $this->terminal->rules();
        $messages = $this->terminal->messages();
        $data = $this->validate($rules, $messages);

        if (!$this->terminal->exists())
            while (DB::table(table: 'tb_terminales')->where('identificador', $data['identificador'])->count() > 0) {
                $data['identificador'] = str_shuffle(uniqid());
            }

        $this->terminal->fill($data)->save();

        $this->emit('show-toast', 'Terminal guardada.');
        $this->emit('$refresh');
        $this->emit('closeModal');
    }
}
